{
  "hash": "94346112487cb998dcb7e7f0604a2c23",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SQLite ICA1 part 1\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n## Clear console on each execute and set chunk default to not show code\n\ncat('\\014')\n```\n\n\f\n\n```{.r .cell-code}\n## Download and load libraries\n\nif(!require(\"DBI\"))\n  install.packages(\"DBI\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: DBI\n```\n\n\n:::\n\n```{.r .cell-code}\nif(!require(\"dplyr\"))\n  install.packages(\"dplyr\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: dplyr\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nif(!require(\"tidyverse\"))\n  install.packages(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: tidyverse\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'stringr' was built under R version 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ ggplot2   3.4.4     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(DBI)\nlibrary(dplyr)\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Connect (and create) a new local SQLite DB\n\nconn <- dbConnect(RSQLite::SQLite(), dbname = \"ICA_2023.sqlite\")\n\ndbGetQuery(conn, \"select customercountry as country from customers\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      country\n1          UK\n2      France\n3     Germany\n4       Italy\n5       Spain\n6       Spain\n7 Netherlands\n8          UK\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}