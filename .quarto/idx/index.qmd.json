{"title":"SQLite ICA1 part 1","markdown":{"yaml":{"title":"SQLite ICA1 part 1"},"headingText":"Clear console on each execute and set chunk default to not show code","containsRefs":false,"markdown":"\n\n```{r}\n\ncat('\\014')\n\n### Download and load libraries\n\nif(!require(\"DBI\"))\n  install.packages(\"DBI\")\nif(!require(\"dplyr\"))\n  install.packages(\"dplyr\")\nif(!require(\"tidyverse\"))\n  install.packages(\"tidyverse\")\n\nlibrary(DBI)\nlibrary(dplyr)\nlibrary(tidyverse)\n```\n\n```{r}\n### Connection to the database\n\nconn <- dbConnect(RSQLite::SQLite(), dbname = \"ICA_2023.sqlite\")\n```\n\n```{r}\n### Query for section 1 question 1\n\n#### Lists the budget and amount of projects based on country\n\ndbGetQuery(conn, \"SELECT \n                        cs.customerCountry as country, \n                        sum(ps.budget) as totalBudget,\n                        count(ps.projectId) as ammtOfProjects \n                  FROM \n                      customers cs \n                  JOIN \n                      projects ps ON cs. customerId = ps.customerId \n                  GROUP BY \n                          country \n                  ORDER BY \n                          totalBudget DESC;\")\n```\n\n```{r}\n### Query for section 1 question 2\n\n#### Used to display average development time of a project based on the number of assets used\n\ndbGetQuery(conn, \"SELECT \n                        ps.projectId,\n                        count(a.assetId) as totalAssets,\n                        julianday(ps.enddate) - julianday(ps.startdate)                             as avgDevTime\n                  FROM  \n                      projects ps\n                  JOIN\n                      assets a ON ps.projectId = a.projectId\n                  GROUP BY\n                          ps.projectId;\")\n```\n\n```{r}\n### Query for section 1 question 3\n\n#### Used to show the top 3 developers according to the ammount of completed projects \n\ndbGetQuery(conn, \"SELECT\n                        ds.name as developerName,\n                        count(ps.projectId) as completedProjects\n                  FROM\n                      developers ds\n                  JOIN\n                      projectdevelopers pds ON \n                      ds.developerId = pds.developerId\n                  JOIN\n                      projects ps ON pds.projectId = ps.projectId\n                  WHERE\n                       ps.status = 'Completed'\n                  GROUP BY\n                          ds.developerId, developerName\n                  ORDER BY\n                          completedProjects DESC\n                  LIMIT 3;\")\n```\n\n```{r}\n### Query for section 2 question 1\n\n#### Shows the relation of the amount of models and textures compared to budget\ndbGetQuery(conn, \"SELECT\n                        ps.projectName,\n                        COUNT(a.type) AS totalAssets,\n                        ps.budget\n                  FROM\n                      projects ps\n                  JOIN\n                      assets a ON ps.projectId = a.projectId\n                  WHERE \n                       a.type LIKE '%3D Model%' OR a.type LIKE '%Texture%'\n                       OR a.type LIKE '%Animation%'\n                  GROUP BY\n                          ps.projectId\n                  ORDER BY \n                          ps.budget;\")\n```\n\n```{r}\n### Query for section 2 question 2\n\n#### Shows unique types of assets in the projects\n\ndbGetQuery(conn, \"SELECT\n                        DISTINCT type\n                  FROM\n                      assets\n                  ORDER BY \n                          creationDate;\")\n```\n\n```{r}\n### Query for section 2 question 3\n\n#### See all developers working on a specific project\n\ndbGetQuery(conn, \"SELECT\n                        name\n                  FROM\n                      developers\n                  WHERE\n                       DeveloperId IN \n                       (SELECT\n                              developerId\n                        FROM\n                            projectDevelopers\n                        WHERE\n                             ProjectId = 102);\")\n```\n\n```{r}\n### Disconnecting from the database\ndbDisconnect(conn)\n```\n","srcMarkdownNoYaml":"\n\n```{r}\n### Clear console on each execute and set chunk default to not show code\n\ncat('\\014')\n\n### Download and load libraries\n\nif(!require(\"DBI\"))\n  install.packages(\"DBI\")\nif(!require(\"dplyr\"))\n  install.packages(\"dplyr\")\nif(!require(\"tidyverse\"))\n  install.packages(\"tidyverse\")\n\nlibrary(DBI)\nlibrary(dplyr)\nlibrary(tidyverse)\n```\n\n```{r}\n### Connection to the database\n\nconn <- dbConnect(RSQLite::SQLite(), dbname = \"ICA_2023.sqlite\")\n```\n\n```{r}\n### Query for section 1 question 1\n\n#### Lists the budget and amount of projects based on country\n\ndbGetQuery(conn, \"SELECT \n                        cs.customerCountry as country, \n                        sum(ps.budget) as totalBudget,\n                        count(ps.projectId) as ammtOfProjects \n                  FROM \n                      customers cs \n                  JOIN \n                      projects ps ON cs. customerId = ps.customerId \n                  GROUP BY \n                          country \n                  ORDER BY \n                          totalBudget DESC;\")\n```\n\n```{r}\n### Query for section 1 question 2\n\n#### Used to display average development time of a project based on the number of assets used\n\ndbGetQuery(conn, \"SELECT \n                        ps.projectId,\n                        count(a.assetId) as totalAssets,\n                        julianday(ps.enddate) - julianday(ps.startdate)                             as avgDevTime\n                  FROM  \n                      projects ps\n                  JOIN\n                      assets a ON ps.projectId = a.projectId\n                  GROUP BY\n                          ps.projectId;\")\n```\n\n```{r}\n### Query for section 1 question 3\n\n#### Used to show the top 3 developers according to the ammount of completed projects \n\ndbGetQuery(conn, \"SELECT\n                        ds.name as developerName,\n                        count(ps.projectId) as completedProjects\n                  FROM\n                      developers ds\n                  JOIN\n                      projectdevelopers pds ON \n                      ds.developerId = pds.developerId\n                  JOIN\n                      projects ps ON pds.projectId = ps.projectId\n                  WHERE\n                       ps.status = 'Completed'\n                  GROUP BY\n                          ds.developerId, developerName\n                  ORDER BY\n                          completedProjects DESC\n                  LIMIT 3;\")\n```\n\n```{r}\n### Query for section 2 question 1\n\n#### Shows the relation of the amount of models and textures compared to budget\ndbGetQuery(conn, \"SELECT\n                        ps.projectName,\n                        COUNT(a.type) AS totalAssets,\n                        ps.budget\n                  FROM\n                      projects ps\n                  JOIN\n                      assets a ON ps.projectId = a.projectId\n                  WHERE \n                       a.type LIKE '%3D Model%' OR a.type LIKE '%Texture%'\n                       OR a.type LIKE '%Animation%'\n                  GROUP BY\n                          ps.projectId\n                  ORDER BY \n                          ps.budget;\")\n```\n\n```{r}\n### Query for section 2 question 2\n\n#### Shows unique types of assets in the projects\n\ndbGetQuery(conn, \"SELECT\n                        DISTINCT type\n                  FROM\n                      assets\n                  ORDER BY \n                          creationDate;\")\n```\n\n```{r}\n### Query for section 2 question 3\n\n#### See all developers working on a specific project\n\ndbGetQuery(conn, \"SELECT\n                        name\n                  FROM\n                      developers\n                  WHERE\n                       DeveloperId IN \n                       (SELECT\n                              developerId\n                        FROM\n                            projectDevelopers\n                        WHERE\n                             ProjectId = 102);\")\n```\n\n```{r}\n### Disconnecting from the database\ndbDisconnect(conn)\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.533","editor":"visual","theme":"cosmo","title":"SQLite ICA1 part 1"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}