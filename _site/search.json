[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SQLite ICA1 part 1",
    "section": "",
    "text": "cat('\\014')"
  },
  {
    "objectID": "index.html#section-a",
    "href": "index.html#section-a",
    "title": "SQLite ICA1 part 1",
    "section": "Section A",
    "text": "Section A\n\nQuery for section 1 question 1\n\nLists the budget and amount of projects based on country\n\nQ1.1 &lt;- dbGetQuery(conn, \"SELECT \n                        cs.customerCountry as country, \n                        sum(ps.budget) as totalBudget,\n                        count(ps.projectId) as ammtOfProjects \n                  FROM \n                      customers cs \n                  JOIN \n                      projects ps ON cs. customerId = ps.customerId \n                  GROUP BY \n                          country \n                  ORDER BY \n                          totalBudget DESC;\")\n\nkable(Q1.1)\n\n\n\n\ncountry\ntotalBudget\nammtOfProjects\n\n\n\n\nSpain\n650000\n2\n\n\nUK\n550000\n2\n\n\nNetherlands\n400000\n1\n\n\nItaly\n250000\n1\n\n\nFrance\n200000\n1\n\n\nGermany\n150000\n1\n\n\n\n\n\n\n\n\nQuery for section 1 question 2\n\nUsed to display average development time of a project based on the number of assets used\n\nQ1.2 &lt;- dbGetQuery(conn, \"SELECT \n                        ps.projectId,\n                        count(a.assetId) as totalAssets,\n                        julianday(ps.enddate) - julianday(ps.startdate)                             as avgDevTime\n                  FROM  \n                      projects ps\n                  JOIN\n                      assets a ON ps.projectId = a.projectId\n                  GROUP BY\n                          ps.projectId;\")\n\nkable(Q1.2)\n\n\n\n\nProjectID\ntotalAssets\navgDevTime\n\n\n\n\n101\n10\n272\n\n\n102\n11\n91\n\n\n103\n11\n272\n\n\n104\n10\n153\n\n\n\n\n\n\n\n\nQuery for section 1 question 3\n\nUsed to show the top 3 developers according to the ammount of completed projects\n\nQ1.3 &lt;- dbGetQuery(conn, \"SELECT\n                        ds.name as developerName,\n                        count(ps.projectId) as completedProjects\n                  FROM\n                      developers ds\n                  JOIN\n                      projectdevelopers pds ON \n                      ds.developerId = pds.developerId\n                  JOIN\n                      projects ps ON pds.projectId = ps.projectId\n                  WHERE\n                       ps.status = 'Completed'\n                  GROUP BY\n                          ds.developerId, developerName\n                  ORDER BY\n                          completedProjects DESC\n                  LIMIT 3;\")\n\nkable(Q1.3)\n\n\n\n\ndeveloperName\ncompletedProjects\n\n\n\n\nMorgan Lee\n2\n\n\nAlice Johnson\n1\n\n\nJordan Kim\n1\n\n\n\n\n\n\n\n\nQuery for section 2 question 1\n\nShows the relation of the amount of models and textures compared to budget\n\nQ2.1 &lt;- dbGetQuery(conn, \"SELECT\n                        ps.projectName,\n                        COUNT(a.type) AS totalAssets,\n                        ps.budget\n                  FROM\n                      projects ps\n                  JOIN\n                      assets a ON ps.projectId = a.projectId\n                  WHERE \n                       a.type LIKE '%3D Model%' OR a.type LIKE '%Texture%'\n                       OR a.type LIKE '%Animation%'\n                  GROUP BY\n                          ps.projectId\n                  ORDER BY \n                          ps.budget;\")\n\nkable(Q2.1)\n\n\n\n\nProjectName\ntotalAssets\nBudget\n\n\n\n\nGalaxy Quest\n2\n100000\n\n\nShadow Legacy\n4\n150000\n\n\nMystic Realms\n2\n200000\n\n\nUrban Adventure\n5\n250000\n\n\n\n\n\n\n\n\nQuery for section 2 question 2\n\nShows unique types of assets in the projects\n\nQ2.2 &lt;- dbGetQuery(conn, \"SELECT\n                        DISTINCT type\n                  FROM\n                      assets\n                  ORDER BY \n                          creationDate;\")\n\nkable(Q2.2)\n\n\n\n\nType\n\n\n\n\nLevel Design\n\n\nTexture\n\n\nCinematic\n\n\nUI Element\n\n\n3D Model\n\n\nAnimation\n\n\nCharacter Model\n\n\nGameplay Script\n\n\nEnvironment Design\n\n\nSound\n\n\n\n\n\n\n\n\nQuery for section 2 question 3\n\nSee all developers working on a specific project\n\nQ2.3 &lt;- dbGetQuery(conn, \"SELECT\n                          name\n                      FROM\n                          developers\n                     WHERE\n                          DeveloperId IN \n                          (SELECT\n                                 developerId\n                           FROM\n                               projectDevelopers\n                           WHERE\n                                ProjectId = 102);\")\n\nkable(Q2.3)\n\n\n\n\nName\n\n\n\n\nMorgan Lee"
  },
  {
    "objectID": "index.html#section-b",
    "href": "index.html#section-b",
    "title": "SQLite ICA1 part 1",
    "section": "Section B",
    "text": "Section B\n\nPart 1\n\nDataframe from database query for table creation\n\nQB &lt;- dbGetQuery(conn, \"SELECT\n                        ps.budget,\n                        COUNT(ads.developerId) AS developers\n                  FROM\n                      projects ps\n                  JOIN\n                      assets a ON a.projectId = ps.projectId\n                  JOIN\n                      assetsdevelopers ads ON ads.assetId = a.assetId\n                  GROUP BY\n                          ps.projectId, ps.budget;\")\nprojectData &lt;- as.data.frame(QB)\n\nhead(projectData)\n\n  Budget developers\n1 100000         10\n2 200000         11\n3 150000         11\n4 250000         10\n\nprojectData %&gt;%\n  lm(Budget ~ developers, data = .) %&gt;%\n  summary()\n\n\nCall:\nlm(formula = Budget ~ developers, data = .)\n\nResiduals:\n     1      2      3      4 \n-75000  25000 -25000  75000 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)  1.750e+05  8.310e+05   0.211    0.853\ndevelopers  -8.731e-11  7.906e+04   0.000    1.000\n\nResidual standard error: 79060 on 2 degrees of freedom\nMultiple R-squared:  1.084e-30, Adjusted R-squared:   -0.5 \nF-statistic: 2.168e-30 on 1 and 2 DF,  p-value: 1\n\nggplot(projectData,aes(x = Budget, y = developers)) + geom_point() +geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "index.html#disconnecting-from-the-database",
    "href": "index.html#disconnecting-from-the-database",
    "title": "SQLite ICA1 part 1",
    "section": "Disconnecting from the database",
    "text": "Disconnecting from the database\n\ndbDisconnect(conn)"
  },
  {
    "objectID": "2023_DAIE_ICA_1_LH/index.html",
    "href": "2023_DAIE_ICA_1_LH/index.html",
    "title": "SQLite ICA1 part 1",
    "section": "",
    "text": "cat('\\014')"
  },
  {
    "objectID": "2023_DAIE_ICA_1_LH/index.html#section-a",
    "href": "2023_DAIE_ICA_1_LH/index.html#section-a",
    "title": "SQLite ICA1 part 1",
    "section": "Section A",
    "text": "Section A\n\nQuery for section 1 question 1\n\nLists the budget and amount of projects based on country\n\nQ1.1 &lt;- dbGetQuery(conn, \"SELECT \n                        cs.customerCountry as country, \n                        sum(ps.budget) as totalBudget,\n                        count(ps.projectId) as ammtOfProjects \n                  FROM \n                      customers cs \n                  JOIN \n                      projects ps ON cs. customerId = ps.customerId \n                  GROUP BY \n                          country \n                  ORDER BY \n                          totalBudget DESC;\")\n\nkable(Q1.1)\n\n\n\n\ncountry\ntotalBudget\nammtOfProjects\n\n\n\n\nSpain\n650000\n2\n\n\nUK\n550000\n2\n\n\nNetherlands\n400000\n1\n\n\nItaly\n250000\n1\n\n\nFrance\n200000\n1\n\n\nGermany\n150000\n1\n\n\n\n\n\n\n\n\nQuery for section 1 question 2\n\nUsed to display average development time of a project based on the number of assets used\n\nQ1.2 &lt;- dbGetQuery(conn, \"SELECT \n                        ps.projectId,\n                        count(a.assetId) as totalAssets,\n                        julianday(ps.enddate) - julianday(ps.startdate)                             as avgDevTime\n                  FROM  \n                      projects ps\n                  JOIN\n                      assets a ON ps.projectId = a.projectId\n                  GROUP BY\n                          ps.projectId;\")\n\nkable(Q1.2)\n\n\n\n\nProjectID\ntotalAssets\navgDevTime\n\n\n\n\n101\n10\n272\n\n\n102\n11\n91\n\n\n103\n11\n272\n\n\n104\n10\n153\n\n\n\n\n\n\n\n\nQuery for section 1 question 3\n\nUsed to show the top 3 developers according to the ammount of completed projects\n\nQ1.3 &lt;- dbGetQuery(conn, \"SELECT\n                        ds.name as developerName,\n                        count(ps.projectId) as completedProjects\n                  FROM\n                      developers ds\n                  JOIN\n                      projectdevelopers pds ON \n                      ds.developerId = pds.developerId\n                  JOIN\n                      projects ps ON pds.projectId = ps.projectId\n                  WHERE\n                       ps.status = 'Completed'\n                  GROUP BY\n                          ds.developerId, developerName\n                  ORDER BY\n                          completedProjects DESC\n                  LIMIT 3;\")\n\nkable(Q1.3)\n\n\n\n\ndeveloperName\ncompletedProjects\n\n\n\n\nMorgan Lee\n2\n\n\nAlice Johnson\n1\n\n\nJordan Kim\n1\n\n\n\n\n\n\n\n\nQuery for section 2 question 1\n\nShows the relation of the amount of models and textures compared to budget\n\nQ2.1 &lt;- dbGetQuery(conn, \"SELECT\n                        ps.projectName,\n                        COUNT(a.type) AS totalAssets,\n                        ps.budget\n                  FROM\n                      projects ps\n                  JOIN\n                      assets a ON ps.projectId = a.projectId\n                  WHERE \n                       a.type LIKE '%3D Model%' OR a.type LIKE '%Texture%'\n                       OR a.type LIKE '%Animation%'\n                  GROUP BY\n                          ps.projectId\n                  ORDER BY \n                          ps.budget;\")\n\nkable(Q2.1)\n\n\n\n\nProjectName\ntotalAssets\nBudget\n\n\n\n\nGalaxy Quest\n2\n100000\n\n\nShadow Legacy\n4\n150000\n\n\nMystic Realms\n2\n200000\n\n\nUrban Adventure\n5\n250000\n\n\n\n\n\n\n\n\nQuery for section 2 question 2\n\nShows unique types of assets in the projects\n\nQ2.2 &lt;- dbGetQuery(conn, \"SELECT\n                        DISTINCT type\n                  FROM\n                      assets\n                  ORDER BY \n                          creationDate;\")\n\nkable(Q2.2)\n\n\n\n\nType\n\n\n\n\nLevel Design\n\n\nTexture\n\n\nCinematic\n\n\nUI Element\n\n\n3D Model\n\n\nAnimation\n\n\nCharacter Model\n\n\nGameplay Script\n\n\nEnvironment Design\n\n\nSound\n\n\n\n\n\n\n\n\nQuery for section 2 question 3\n\nSee all developers working on a specific project\n\nQ2.3 &lt;- dbGetQuery(conn, \"SELECT\n                          name\n                      FROM\n                          developers\n                     WHERE\n                          DeveloperId IN \n                          (SELECT\n                                 developerId\n                           FROM\n                               projectDevelopers\n                           WHERE\n                                ProjectId = 102);\")\n\nkable(Q2.3)\n\n\n\n\nName\n\n\n\n\nMorgan Lee"
  },
  {
    "objectID": "2023_DAIE_ICA_1_LH/index.html#section-b",
    "href": "2023_DAIE_ICA_1_LH/index.html#section-b",
    "title": "SQLite ICA1 part 1",
    "section": "Section B",
    "text": "Section B\n\nPart 1\n\nDataframe from database query for table creation\n\nQB &lt;- dbGetQuery(conn, \"SELECT\n                        ps.budget,\n                        COUNT(ads.developerId) AS developers\n                  FROM\n                      projects ps\n                  JOIN\n                      assets a ON a.projectId = ps.projectId\n                  JOIN\n                      assetsdevelopers ads ON ads.assetId = a.assetId\n                  GROUP BY\n                          ps.projectId, ps.budget;\")\nprojectData &lt;- as.data.frame(QB)\n\nhead(projectData)\n\n  Budget developers\n1 100000         10\n2 200000         11\n3 150000         11\n4 250000         10\n\nprojectData %&gt;%\n  lm(Budget ~ developers, data = .) %&gt;%\n  summary()\n\n\nCall:\nlm(formula = Budget ~ developers, data = .)\n\nResiduals:\n     1      2      3      4 \n-75000  25000 -25000  75000 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)  1.750e+05  8.310e+05   0.211    0.853\ndevelopers  -8.731e-11  7.906e+04   0.000    1.000\n\nResidual standard error: 79060 on 2 degrees of freedom\nMultiple R-squared:  1.084e-30, Adjusted R-squared:   -0.5 \nF-statistic: 2.168e-30 on 1 and 2 DF,  p-value: 1\n\nggplot(projectData,aes(x = Budget, y = developers)) + geom_point() +geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "2023_DAIE_ICA_1_LH/index.html#disconnecting-from-the-database",
    "href": "2023_DAIE_ICA_1_LH/index.html#disconnecting-from-the-database",
    "title": "SQLite ICA1 part 1",
    "section": "Disconnecting from the database",
    "text": "Disconnecting from the database\n\ndbDisconnect(conn)"
  }
]